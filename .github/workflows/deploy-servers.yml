name: CI/CD Pipeline
on:
  push:
    branches:
      - master
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check for changes in Game Server
        id: check_game_server
        run: |
          git diff --quiet HEAD^ HEAD Backend || echo "changed=true" >> $GITHUB_OUTPUT
      - name: Check for changes in User Backend
        id: check_user_backend
        run: |
          git diff --quiet HEAD^ HEAD UserBackend || echo "changed=true" >> $GITHUB_OUTPUT
      - name: Output change detection results
        run: |
          echo "Game Server changed: ${{ steps.check_game_server.outputs.changed == 'true' }}"
          echo "User Backend changed: ${{ steps.check_user_backend.outputs.changed == 'true' }}"
          if [[ "${{ steps.check_game_server.outputs.changed }}" != "true" && "${{ steps.check_user_backend.outputs.changed }}" != "true" ]]; then
            echo "No changes detected in either server. No deployment needed."
          fi
      - name: Build and push Game Server
        if: steps.check_game_server.outputs.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./Backend
          push: true
          tags: akashilangovan/gameserver:latest
      - name: Build and push User Backend
        if: steps.check_user_backend.outputs.changed == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./UserBackend
          push: true
          tags: akashilangovan/userbackend:latest
      - name: Deploy Game Server
        if: steps.check_game_server.outputs.changed == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GAME_SERVER_HOST }}
          username: ${{ secrets.GAME_SERVER_USERNAME }}
          key: ${{ secrets.GAME_SERVER_SSH_KEY }}
          script: |
            sudo docker pull akashilangovan/gameserver:latest
            sudo docker stop gameserver_act|| true
            sudo docker rm gameserver_act || true
            sudo docker run -e ENV=PROD -p 5553:5553 -d --name gameserver_act akashilangovan/gameserver:latest
      - name: Deploy UserBackend
        if: steps.check_user_backend.outputs.changed == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.USER_BACKEND_HOST }}
          username: ${{ secrets.USER_BACKEND_USERNAME }}
          key: ${{ secrets.USER_BACKEND_SSH_KEY }}
          script: |
            sudo docker pull akashilangovan/userbackend:latest
            sudo docker stop userbackend_act || true
            sudo docker rm userbackend_act || true
            sudo docker run -e ENV=PROD -d -p 5001:5001 -v /home/ec2-user/game_data:/app/game_data --name userbackend_act akashilangovan/userbackend:latest
